name: Neo4j Restore 
 
# Allows you to run this workflow manually from the Actions tab 
on: 
 workflow_dispatch:
   inputs:
     namespace: 
       description: 'Kubernetes Namespace'
       required: true
       #default: 'default'
     database: 
       description: 'Neo4j Database name'
       required: true
     backupfile:
      description: 'Backup file'
      required: true 
      
jobs:
  restore-neo4j:
    runs-on: ubuntu-latest

    steps:
      - name: checkout-repository
        uses: actions/checkout@v4 

      - name: Set up kubectl 
        run: | 
            if ! command -v kubectl &> /dev/null; then 
            curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl 
            mkdir -p ~/.local/bin
            mv ./kubectl ~/.local/bin/kubectl
            kubectl version --client 
            fi
      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBE_CONFIG }}' | base64 --decode > ~/.kube/config
   

      - name: Get Neo4j Pod Name 
        id: get_pod 
        run: |
            # k get pod -n neo4j-sbx-02-dev -l  app=mydb -o jsonpath="{.items[0].metadata.name}"
            POD_NAME=$(kubectl get pods -n ${{ github.event.inputs.namespace }} -l app=mydb -o jsonpath="{.items[0].metadata.name}")
            echo "POD_NAME=$POD_NAME" >> GITHUB_ENV 
     

          
      


  

      
             
