name: Neo4j Restore 
 
# Allows you to run this workflow manually from the Actions tab 
on: 
 workflow_dispatch:
   inputs:
      environment:
        description: "Cluster"
        type: choice
        options:
          - dev
          - stg
          - prd
      tenant: 
        description: "Enter the tenant name"
        required: true 
      pod_number: 
        description: "Enter the pod number"
        required: true 
      database: 
       description: 'Neo4j Database name'
       required: true
      backupfile:
       description: 'Backup file'
       required: true 
      
jobs:
  restore-neo4j:
    runs-on: ubuntu-latest

    steps:
      - name: checkout-repository
        uses: actions/checkout@v4 

      - name: Set up kubectl 
        run: | 
            if ! command -v kubectl &> /dev/null; then 
            curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl 
            mkdir -p ~/.local/bin
            mv ./kubectl ~/.local/bin/kubectl
            kubectl version --client 
            fi
      - name: Test kubectl installation
        run: | 
            which kubectl 
            kubectl version --client || echo "kubectl is not installed"

      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          echo '${{ secrets.KUBE_CONFIG }}' | base64 --decode > ~/.kube/config

      - name: Generate Namespace and Pod name 
        run: | 
             ENVIRONMENT=${{ inputs.environment }}
             TENANT_NAME=${{ inputs.tenant }}
             POD_NUMBER=${{ inputs.pod_number }}
             BACKUP_FILE=${{ inputs.backupfile }}
             # Generate Namespace 
             NAMESPACE="neo4j-${TENANT_NAME}-${ENVIRONMENT}"
             if [ "$POD_NUMBER" -eq 1 ]; then
              POD_NAME="${NAMESPACE}-0"
             elif [ "$POD_NUMBER" -lt 10 ]; then
              POD_NAME="${NAMESPACE}-0${POD_NUMBER}-0"
             else
              POD_NAME="${NAMESPACE}-0"
             fi

             echo "Namespace name is : ${NAMESPACE}"
             echo "Pod Name is : ${POD_NAME}"

             # Export Variables for later steps
             echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
             echo "POD_NAME=$POD_NAME" >> $GITHUB_ENV
